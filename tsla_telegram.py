import os
import yfinance as yf
import requests
from datetime import datetime

BOT_TOKEN = os.environ["BOT_TOKEN"]
CHAT_ID = os.environ["CHAT_ID"]

def send(msg: str) -> None:
Â Â Â Â url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
Â Â Â Â r = requests.post(url, data={"chat_id": CHAT_ID, "text": msg})
Â Â Â Â r.raise_for_status()

def build_message() -> str:
Â Â Â Â tsla = yf.Ticker("TSLA")
Â Â Â Â daily = tsla.history(period="5d")
Â Â Â Â y_close = float(daily["Close"].iloc[-2])

Â Â Â Â intraday = tsla.history(period="1d", interval="1m")
Â Â Â Â if intraday is not None and not intraday.empty:
Â Â Â Â Â Â Â Â last_price = float(intraday["Close"].iloc[-1])
Â Â Â Â else:
Â Â Â Â Â Â Â Â last_price = float(daily["Close"].iloc[-1])

Â Â Â Â change = last_price - y_close
Â Â Â Â pct = (change / y_close) * 100 if y_close else 0.0
Â Â Â Â arrow = "ðŸ“ˆ" if change >= 0 else "ðŸ“‰"

Â Â Â Â headlines = []
Â Â Â Â try:
Â Â Â Â Â Â Â Â news = tsla.news or []
Â Â Â Â Â Â Â Â for a in news[:3]:
Â Â Â Â Â Â Â Â Â Â Â Â title = a.get("title", "").strip()
Â Â Â Â Â Â Â Â Â Â Â Â if title:
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â headlines.append(f"ðŸ“° {title}")
Â Â Â Â except Exception:
Â Â Â Â Â Â Â Â pass

Â Â Â Â ts = datetime.now().strftime("%Y-%m-%d %H:%M")
Â Â Â Â parts = [
Â Â Â Â Â Â Â Â f"{arrow} TSLA: ${last_price:,.2f} ({change:+.2f}, {pct:+.2f}%)",
Â Â Â Â Â Â Â Â f"Time: {ts} ET",
Â Â Â Â ]
Â Â Â Â if headlines:
Â Â Â Â Â Â Â Â parts.append("")
Â Â Â Â Â Â Â Â parts.extend(headlines)

Â Â Â Â return "\n".join(parts)

if __name__ == "__main__":
Â Â Â Â send(build_message())